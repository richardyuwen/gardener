# Cluster role granting full permissions to all resources in the gardener API group.
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: garden.sapcloud.io:admin
  labels:
    garden.sapcloud.io/role: admin
rules:
- apiGroups:
  - garden.sapcloud.io
  - core.gardener.cloud
  - dashboard.gardener.cloud
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get

# Aggregated cluster role specifying garden administrators.
# IMPORTANT: You need to define a corresponding ClusterRoleBinding binding specific users
#            to this ClusterRole on your own (users bound to this role have full access to
#            the Garden system).
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: garden.sapcloud.io:system:administrators
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      garden.sapcloud.io/role: admin
  - matchLabels:
      garden.sapcloud.io/role: project-member
rules: []

# Cluster role with cluster role binding allowing all authenticated users to read the cloudprofiles
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: garden.sapcloud.io:system:cloudprofiles
  labels:
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - garden.sapcloud.io
  resources:
  - cloudprofiles
  verbs:
  - get
  - list
  - watch
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRoleBinding
metadata:
  name: garden.sapcloud.io:system:cloudprofiles
  labels:
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: garden.sapcloud.io:system:cloudprofiles
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated

# Cluster role for allowing creation of projects.
# IMPORTANT: You need to define a corresponding ClusterRoleBinding binding specific users/
#            groups/serviceaccounts to this ClusterRole on your own.
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: garden.sapcloud.io:system:project-creation
  labels:
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - garden.sapcloud.io
  resources:
  - projects
  verbs:
  - create

# Cluster role setting the permissions for a project member. It gets bound by a RoleBinding
# in a respective project namespace.
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: garden.sapcloud.io:system:project-member
  labels:
    garden.sapcloud.io/role: project-member
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  - serviceaccounts
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - garden.sapcloud.io
  resources:
  - shoots
  - secretbindings
  - quotas
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.gardener.cloud
  resources:
  - plants
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
# ClusterRole defines the required permissions for the gardener-scheduler
# Configmap: GET on gardener-scheduler-configmap to read the scheduler configuration & DELETE, GET, PATCH, UPDATE on gardener-scheduler-leader-election
# Events: CREATE, PATCH, UPDATE to send scheduling events
# Seeds: GET, LIST, WATCH
# Shoots: GET, LIST, WATCH, no modification rights needed
# Shoots/binding CREATE on binding subresource of shoots - actual scheduling request that leads to setting shoot.Spec.Cloud.Seed
# Shoots/status PATCH, UPDATE on status subresource of shoots
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: gardener.cloud:system:gardener-scheduler
  labels:
    garden.sapcloud.io/role: gardener-scheduler
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
    - ""
  resources:
    - events
  verbs:
    - create
    - patch
    - update
- apiGroups:
    - ""
  resources:
    - configmaps
  verbs:
    - create
    - delete
    - get
    - patch
    - update
- apiGroups:
    - garden.sapcloud.io
  resources:
    - seeds
  verbs:
    - get
    - list
    - watch
- apiGroups:
    - garden.sapcloud.io
  resources:
    - shoots
  verbs:
    - get
    - list
    - watch
    - update

# Cluster role setting the permissions for a project viewer. It gets bound by a RoleBinding
# in a respective project namespace.
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: garden.sapcloud.io:system:project-viewer
  labels:
    garden.sapcloud.io/role: project-viewer
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - garden.sapcloud.io
  resources:
  - shoots
  - secretbindings
  - quotas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - core.gardener.cloud
  resources:
  - plants
  verbs:
  - get
  - list
  - watch
