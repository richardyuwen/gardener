apiVersion: {{ include "deploymentversion" . }}
kind: Deployment
metadata:
  name: kibana-logging
  namespace: {{ .Release.Namespace }}
  labels:
    garden.sapcloud.io/role: logging
    app: kibana-logging
    role: logging
spec:
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: kibana-logging
      role: logging
  replicas: {{ .Values.kibana.replicaCount }}
  template:
    metadata:
      annotations:
        checksum/kibana-objects-registration-config: {{ include (print $.Template.BasePath "/kibana/kibana-objects-registration-config.yaml") . | sha256sum }}
        checksum/kibana-saved-objects-config: {{ include (print $.Template.BasePath "/kibana/kibana-saved-objects-config.yaml") . | sha256sum }}
        checksum/kibana-config: {{ include (print $.Template.BasePath "/kibana/kibana-configmap.yaml") . | sha256sum }}
      labels:
        garden.sapcloud.io/role: logging
        app: kibana-logging
        role: logging
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-elasticsearch: allowed
    spec:
      securityContext:
        runAsUser: 65534
        fsGroup: 65534
      containers:
      - name: kibana-logging
        image: {{ index .Values.global.images "kibana-oss" }}
        env:
          {{- toYaml .Values.kibana.env | nindent 10 }}
        ports:
        - name: ui
          containerPort: {{ .Values.kibana.service.internalPort }}
          protocol: TCP
{{- if .Values.kibana.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /api/status
            port: {{ .Values.kibana.service.internalPort }}
          initialDelaySeconds: {{ .Values.kibana.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.kibana.readinessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.kibana.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.kibana.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.kibana.readinessProbe.failureThreshold }}
{{- end }}
        volumeMounts:
        - name: kibana-config
          mountPath: /opt/kibana/config/
      - image: {{ index .Values.global.images "kibana-oss" }}
        name: auto-create-objects
        command:
        - /bin/sh
        - /gardener/register/register
        volumeMounts:
        - name: kibana-config
          mountPath: /opt/kibana/config/
        - name: register
          mountPath: /gardener/register
        - name: saved-objects
          mountPath: /gardener/saved-objects
        resources:
          {{- toYaml .Values.kibana.sidecar.resources | nindent 10 }}
      volumes:
      - name: register
        configMap:
          name: kibana-object-registration
      - name: saved-objects
        configMap:
          name: kibana-saved-objects
      - name: kibana-config
        configMap:
          name: kibana-configmap
