---
apiVersion: {{ include "deploymentversion" . }}
kind: Deployment
metadata:
  name: cluster-autoscaler
  namespace: {{ .Release.Namespace }}
  labels:
    garden.sapcloud.io/role: controlplane
    app: kubernetes
    role: cluster-autoscaler
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: kubernetes
      role: cluster-autoscaler
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        garden.sapcloud.io/role: controlplane
        app: kubernetes
        role: cluster-autoscaler
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-shoot-apiserver: allowed
        networking.gardener.cloud/to-seed-apiserver: allowed
        networking.gardener.cloud/from-prometheus: allowed
    spec:
      serviceAccountName: cluster-autoscaler
      terminationGracePeriodSeconds: 5
      containers:
      - name: cluster-autoscaler
        image: {{ index .Values.images "cluster-autoscaler" }}
        imagePullPolicy: IfNotPresent
        command:
        - ./cluster-autoscaler
        - --address=:{{ .Values.metricsPort }}
        - --kubeconfig=/var/lib/cluster-autoscaler/kubeconfig
        - --cloud-provider=mcm
        {{- range $key, $pool := .Values.workerPools }}
        - --nodes={{ $pool.min }}:{{ $pool.max }}:{{ $.Release.Namespace }}.{{ $pool.name }}
        {{- end }}
        - --stderrthreshold=info
        - --skip-nodes-with-system-pods=false
        - --skip-nodes-with-local-storage=false
        - --expander=least-waste
        - --expendable-pods-priority-cutoff=-10
        {{- range $key, $flag := .Values.flags }}
        - --{{ $flag.name }}={{ $flag.value }}
        {{- end }}
        {{- if .Values.scaleDownUtilizationThreshold }}
        - --scale-down-utilization-threshold={{ .Values.scaleDownUtilizationThreshold }}
        {{- end }}
        {{- if .Values.scaleDownUnneededTime }}
        - --scale-down-unneeded-time={{ .Values.scaleDownUnneededTime }}
        {{- end }}
        {{- if .Values.scaleDownDelayAfterAdd }}
        - --scale-down-delay-after-add={{ .Values.scaleDownDelayAfterAdd }}
        {{- end }}
        {{- if .Values.scaleDownDelayAfterFailure }}
        - --scale-down-delay-after-failure={{ .Values.scaleDownDelayAfterFailure }}
        {{- end }}
        {{- if .Values.scaleDownDelayAfterDelete }}
        - --scale-down-delay-after-delete={{ .Values.scaleDownDelayAfterDelete }}
        {{- end }}
        {{- if .Values.scanInterval }}
        - --scan-interval={{ .Values.scanInterval }}
        {{- end }}
        - --v=2
        env:
        - name: CONTROL_NAMESPACE
          value: {{ .Release.Namespace }}
        - name: TARGET_KUBECONFIG
          value: "/var/lib/cluster-autoscaler/kubeconfig"
        ports:
        - name: metrics
          containerPort: {{ .Values.metricsPort }}
          protocol: TCP
        resources:
          limits:
            cpu: 150m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 300Mi
        volumeMounts:
        - mountPath: /var/lib/cluster-autoscaler
          name: cluster-autoscaler
          readOnly: true
      volumes:
      - name: cluster-autoscaler
        secret:
          secretName: cluster-autoscaler
