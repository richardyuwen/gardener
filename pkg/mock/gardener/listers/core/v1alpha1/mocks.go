// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/gardener/pkg/client/core/listers/core/v1alpha1 (interfaces: PlantLister)

// Package v1alpha1 is a generated GoMock package.
package v1alpha1

import (
	v1alpha1 "github.com/gardener/gardener/pkg/apis/core/v1alpha1"
	v1alpha10 "github.com/gardener/gardener/pkg/client/core/listers/core/v1alpha1"
	gomock "github.com/golang/mock/gomock"
	labels "k8s.io/apimachinery/pkg/labels"
	reflect "reflect"
)

// MockPlantLister is a mock of PlantLister interface
type MockPlantLister struct {
	ctrl     *gomock.Controller
	recorder *MockPlantListerMockRecorder
}

// MockPlantListerMockRecorder is the mock recorder for MockPlantLister
type MockPlantListerMockRecorder struct {
	mock *MockPlantLister
}

// NewMockPlantLister creates a new mock instance
func NewMockPlantLister(ctrl *gomock.Controller) *MockPlantLister {
	mock := &MockPlantLister{ctrl: ctrl}
	mock.recorder = &MockPlantListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPlantLister) EXPECT() *MockPlantListerMockRecorder {
	return m.recorder
}

// List mocks base method
func (m *MockPlantLister) List(arg0 labels.Selector) ([]*v1alpha1.Plant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].([]*v1alpha1.Plant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List
func (mr *MockPlantListerMockRecorder) List(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockPlantLister)(nil).List), arg0)
}

// Plants mocks base method
func (m *MockPlantLister) Plants(arg0 string) v1alpha10.PlantNamespaceLister {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Plants", arg0)
	ret0, _ := ret[0].(v1alpha10.PlantNamespaceLister)
	return ret0
}

// Plants indicates an expected call of Plants
func (mr *MockPlantListerMockRecorder) Plants(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Plants", reflect.TypeOf((*MockPlantLister)(nil).Plants), arg0)
}
