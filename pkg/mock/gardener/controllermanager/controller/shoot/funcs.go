// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/gardener/pkg/mock/gardener/controllermanager/controller/shoot (interfaces: NewCronWithLocation)

// Package shoot is a generated GoMock package.
package shoot

import (
	shoot "github.com/gardener/gardener/pkg/controllermanager/controller/shoot"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockNewCronWithLocation is a mock of NewCronWithLocation interface
type MockNewCronWithLocation struct {
	ctrl     *gomock.Controller
	recorder *MockNewCronWithLocationMockRecorder
}

// MockNewCronWithLocationMockRecorder is the mock recorder for MockNewCronWithLocation
type MockNewCronWithLocationMockRecorder struct {
	mock *MockNewCronWithLocation
}

// NewMockNewCronWithLocation creates a new mock instance
func NewMockNewCronWithLocation(ctrl *gomock.Controller) *MockNewCronWithLocation {
	mock := &MockNewCronWithLocation{ctrl: ctrl}
	mock.recorder = &MockNewCronWithLocationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNewCronWithLocation) EXPECT() *MockNewCronWithLocationMockRecorder {
	return m.recorder
}

// Do mocks base method
func (m *MockNewCronWithLocation) Do(arg0 *time.Location) shoot.Cron {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do", arg0)
	ret0, _ := ret[0].(shoot.Cron)
	return ret0
}

// Do indicates an expected call of Do
func (mr *MockNewCronWithLocationMockRecorder) Do(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockNewCronWithLocation)(nil).Do), arg0)
}
