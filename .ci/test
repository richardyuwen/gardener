#!/usr/bin/env bash

set -e

# For the test step concourse will set the following environment variables:
# SOURCE_PATH - path to component repository root directory.

# not all platforms support readlink -f
# SOURCE_PATH must be set, and treat it as absolute path
rlink=""
set +e
readlink -f /tmp >/dev/null 2>&1
if [ $? -eq 0 ]; then
  # do not support readlink -f, so need alternative
  rlink="readlink -f"
fi
set -e


if [[ -z "${SOURCE_PATH}" ]]; then
  if [ -z "$rlink" ]; then
    echo "ERROR: system does not support 'readlink -f' and SOURCE_PATH not set, exiting." >&2
    exit 1
  fi
  export SOURCE_PATH="$($rlink "$(dirname ${0})/..")"
else
  if [ -z "$rlink" ]; then
    echo "warning: system does not support 'readlink -f', treating SOURCE_PATH as absolute path with symlinks resolved." >&2
  else
    export SOURCE_PATH="$($rlink ${SOURCE_PATH})"
  fi
fi

cd "${SOURCE_PATH}"

# Build the Ginkgo (test framework) binary to be able to execute the tests.
GO111MODULE=on go install -mod=vendor ./vendor/github.com/onsi/ginkgo/ginkgo

# Install Prometheus mock test tool (promtool)
GO111MODULE=off go get -u github.com/prometheus/prometheus/cmd/promtool

###############################################################################

COVER_FLAG=""
if [[ ! -z "$COVERAGE" ]]; then
  COVER_FLAG="-cover"
fi

GO111MODULE=on ginkgo ${COVER_FLAG} -r -mod=vendor cmd pkg plugin

###############################################################################

echo "Executing Prometheus alert tests"
pushd $SOURCE_PATH/charts/seed-monitoring/charts/core/charts/prometheus > /dev/null
  promtool test rules rules-tests/*test.yaml
popd > /dev/null

echo "Executing aggregate Prometheus alert tests"
pushd $SOURCE_PATH/charts/seed-bootstrap/aggregate-prometheus-rules-tests > /dev/null
  promtool test rules *test.yaml
popd > /dev/null
